libname io '/opt/sas/data/letter_campaign_model';
run;

data imputed;
set io.letter4D_pmt
 (keep=
   letter_4D_cp
   age_in_years
   before_letter_pmt_typ
   gender
/*
   last_reason
*/
   orig_bill_cd
   rel_to_subscr
   segment
   state
  );
run;

%macro collapse_categorical_vars(target,cat_var,cat_file);

/* Create a data set with the mean of &target */
/* at each level of &cat_var                */
proc means data=&cat_file noprint nway;
   class &cat_var;
   var &target;
   output out=level mean=prop;
run;

proc print data=level;
run;

/* Use the TRACE statement to find out the */
/* names of the output objects generated   */
/* by the CLUSTER procedure. The LISTING   */
/* option puts those names in the output   */
/* window.                                 */
ods trace on/listing;

/* Use the CLUSTER procedure to perform */
/* Greenacre's correspondence analysis. */
proc cluster data=level method=ward
     outtree=fortree;
   freq _freq_;
   var prop;
   id &cat_var;
run;

/* Turn off the TRACE statement. */
ods trace off;

/* Use ODS to output the ClusterHistory */
/* output object into a data set named  */
/* "cluster."                           */
ods listing close;
ods output clusterhistory=cluster;

proc cluster data=level method=ward;
   freq _freq_;
   var prop;
   id &cat_var;
run;

ods listing;

/* Use the FREQ procedure to get the */
/* Pearson Chi^2 statistic of the    */
/* full state*&target table.            */
proc freq data=&cat_file noprint;
   tables &cat_var*&target / chisq;
   output out=chi(keep=_pchi_) chisq;
run;

/* Use a one-to-many merge to put the  */
/* Chi^2 statistic onto the clustering */
/* results. Calculate a (log) p-value  */
/* for each level of clustering.       */
data cutoff;
   if _n_ = 1 then set chi;
   set cluster;
   chisquare=_pchi_*rsquared;
   degfree=numberofclusters-1;
   logpvalue=logsdf('CHISQ',chisquare,degfree);
run;

/* Create a macro variable (&ncl) that */
/* contains the number of clusters     */
/* associated with the minimum log     */
/* p-value.                            */
proc sql noprint;
   select NumberOfClusters into :ncl
   from cutoff
   having logpvalue=min(logpvalue);
quit;

proc tree data=fortree h=rsq noprint
          nclusters=&ncl out=clus;
   id &cat_var;
run;

proc sort data=clus;
   by clusname;
run;

proc print data=clus;
   by clusname;
   id clusname;
run;
%mend;

%collapse_categorical_vars(letter_4D_cp,age_in_years,imputed);
%collapse_categorical_vars(letter_4D_cp,before_letter_pmt_typ,imputed);
%collapse_categorical_vars(letter_4D_cp,gender,imputed);
/*
%collapse_categorical_vars(letter_4D_cp,last_reason,imputed);
*/
%collapse_categorical_vars(letter_4D_cp,orig_bill_cd,imputed);
%collapse_categorical_vars(letter_4D_cp,rel_to_subscr,imputed);
%collapse_categorical_vars(letter_4D_cp,segment,imputed);
%collapse_categorical_vars(letter_4D_cp,state,imputed);